cmake_minimum_required(VERSION 2.8)
project(CodeAGame2015)

macro (add_pch PCH_HEADER PCH_SRC SRCS)
	if (MSVC)
		get_filename_component(PCH_BASENAME ${PCH_HEADER} NAME_WE)
		set(PCH_BIN "${CMAKE_CURRENT_BINARY_DIR}/${PCH_BASENAME}.pch")
		set_source_files_properties(${SRCS} PROPERTIES COMPILE_FLAGS "/Yu\"${PCH_HEADER}\"" OBJECT_DEPENDS "${PCH_BIN}")
		set_source_files_properties(${PCH_SRC} PROPERTIES COMPILE_FLAGS "/Yc\"${PCH_HEADER}\"" OBJECT_OUTPUTS "${PCH_BIN}")
	endif()
endmacro()


if (WIN32)
	set(WIN32_NOCONSOLE WIN32)
else()
	set(WIN32_NOCONSOLE "")
endif()

find_package(OpenGL REQUIRED)

if(WIN32)
	set(SDL2_INCLUDEDIR ${CMAKE_SOURCE_DIR}/ThirdParty/SDL2/include)
	set(SDL2_LIBDIR ${CMAKE_SOURCE_DIR}/ThirdParty/SDL2/lib/x86)
	set(SDL2_LIBS SDL2.lib SDL2_ttf.lib)
	set(GLEW_INCLUDEDIR ${CMAKE_SOURCE_DIR}/ThirdParty/GLEW/include)
	set(GLEW_LIBDIR ${CMAKE_SOURCE_DIR}/ThirdParty/GLEW/lib)
	set(GLEW_LIBS glew32.lib)
	set(ENET_INCLUDEDIR ${CMAKE_SOURCE_DIR}/ThirdParty/ENet/include)
	set(ENET_LIBS ENet ws2_32.lib winmm.lib)
	set(GLM_INCLUDEDIR ${CMAKE_SOURCE_DIR}/ThirdParty/GLM/include)
	set(STB_INCLUDEDIR ${CMAKE_SOURCE_DIR}/ThirdParty/stb/include)
	set(BOX2D_INCLUDEDIR ${CMAKE_SOURCE_DIR}/ThirdParty/Box2D)
	set(BOX2D_LIBS Box2D)
	set(OPENAL_INCLUDEDIR ${CMAKE_SOURCE_DIR}/ThirdParty/OpenAL/include)
	set(OPENAL_LIBDIR ${CMAKE_SOURCE_DIR}/ThirdParty/OpenAL/lib)
	set(OPENAL_LIBS OpenAL32.lib)
	set(ZLIB_INCLUDEDIR ${CMAKE_SOURCE_DIR}/ThirdParty/zlib)
	set(ZLIB_LIBDIR "")
	set(ZLIB_LIBS zlib)
	set(TINYXML2_INCLUDEDIR ${CMAKE_SOURCE_DIR}/ThirdParty/TinyXML2)
	set(TINYXML2_LIBDIR "")
	set(TINYXML2_LIBS TinyXML2)
	set(TMXPARSER_INCLUDEDIR ${CMAKE_SOURCE_DIR}/ThirdParty/tmx-parser)
	set(TMXPARSER_LIBDIR "")
	set(TMXPARSER_LIBS tmx-parser)
	
else()
	# TODO: Use find library stuff
	set(SDL2_INCLUDEDIR /usr/local/include/SDL2)
	set(SDL2_LIBDIR /usr/local/lib)
	set(SDL2_LIBS libSDL2.dylib libSDL2_ttf.dylib)
	set(GLEW_INCLUDEDIR /usr/local/include)
	set(GLEW_LIBDIR /usr/local/lib)
	set(GLEW_LIBS libGLEW.dylib)
	set(ENET_INCLUDEDIR ${CMAKE_SOURCE_DIR}/ThirdParty/ENet/include)
	set(ENET_LIBS ENet)
	set(GLM_INCLUDEDIR ${CMAKE_SOURCE_DIR}/ThirdParty/GLM/include)
	set(STB_INCLUDEDIR ${CMAKE_SOURCE_DIR}/ThirdParty/stb/include)
	set(BOX2D_INCLUDEDIR ${CMAKE_SOURCE_DIR}/ThirdParty/Box2D)
	set(BOX2D_LIBS Box2D)
	set(OPENAL_INCLUDEDIR /usr/local/include/AL)
	set(OPENAL_LIBDIR /usr/local/lib)
	set(OPENAL_LIBS libopenal.dylib)
	# TODO(jimmy): add zlib, TinyXMl2 and tmx-parser variables

	set(CMAKE_XCODE_ATTRIBUTE_CLANG_CXX_LIBRARY "libc++")
	set(CMAKE_CXX_FLAGS "${CMAKE_C_FLAGS} -std=c++0x -stdlib=libc++")

endif()

set(OUTPUT_DIR ${CMAKE_SOURCE_DIR}/Binaries)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${OUTPUT_DIR})
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG ${OUTPUT_DIR})
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE ${OUTPUT_DIR})
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${OUTPUT_DIR})
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${OUTPUT_DIR})
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${OUTPUT_DIR})

if (WIN32)
	add_definitions(-D_CRT_SECURE_NO_WARNINGS -D_CRT_NONSTDC_NO_WARNINGS)
	add_definitions("/wd4251")
endif()

add_subdirectory(ThirdParty)
add_subdirectory(Source)
